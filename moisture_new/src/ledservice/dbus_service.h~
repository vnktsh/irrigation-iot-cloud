/*
 * Copyright 2015 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

#ifndef LEDFLASHER_SRC_LEDSERVICE_DBUS_SERVICE_H_
#define LEDFLASHER_SRC_LEDSERVICE_DBUS_SERVICE_H_

#include <vector>

#include <base/macros.h>

#include "dbus_bindings/com.android.LEDService.Service.h"
#include "ledstatus.h"

class DBusService final : public com::android::LEDService::ServiceInterface {
 public:
  explicit DBusService(
      brillo::dbus_utils::ExportedObjectManager* object_manager);

  void Start(brillo::dbus_utils::AsyncEventSequencer* sequencer);

 private:
  void SetLED(int32_t led, bool on) override;
  bool GetLED(int32_t led) override;
  std::vector<bool> GetAllLEDs() override;
  std::string GetMoistureReading() override;

  com::android::LEDService::ServiceAdaptor dbus_adaptor_{this};
  brillo::dbus_utils::DBusObject dbus_object_;
  LedStatus leds_;

  DISALLOW_COPY_AND_ASSIGN(DBusService);
};

#endif  // LEDFLASHER_SRC_LEDSERVICE_DBUS_SERVICE_H_
